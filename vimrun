#!/bin/bash

function toxenv {
    env=$1
    for try in py38 py37 py36 py35 py27; do
        if [ "$env" == "" -a -d .tox/$try ]; then
            env=$try
        fi
    done
    if [ ! -d ".tox/$env" ]; then
        echo "No virtualenv found at .tox/$env"
        return 1
    fi
    source ".tox/$env/bin/activate"
    if [ -f setup.py ]; then
        name=$(python setup.py --name)
        pip uninstall -yq $name
        python setup.py -q develop
        echo "Activated $env and installed $name in development mode"
    else
        export PYTHONPATH=`pwd`
        echo "Activated $env and set PYTHONPATH to $PYTHONPATH"
    fi
}

if [ x$1 == x ]; then
    echo "usage: vimrun FILE"
    exit 1
fi

if [[ $1 =~ /* ]]; then
    FILE_PATH=$1 # Absolute path
else
    FILE_PATH=`pwd`/$1 # Relative path
fi
shift

FILE_NAME=`basename $FILE_PATH`
FILE_EXT=${FILE_NAME##*.}

run() {
    echo \$ $*
    $*
}

case "$FILE_EXT" in
    "py")
        if [[ $FILE_NAME =~ test_* ]]; then
            if toxenv; then
                run pytest $FILE_PATH
                deactivate
            else
                run pytest $FILE_PATH
            fi
        else
            run python3 $FILE_PATH $*
        fi
        ;;
    "hs")
        run runhaskell $FILE_PATH $*
        ;;
    "rs")
        dir=$(dirname "$FILE_PATH")
        while [ ! -f "$dir/Cargo.toml" ]; do
            dir=$(dirname "$dir")
            if [ "$dir" == / ]; then
                echo "Can't find Cargo.toml"
                exit 1
            fi
        done
        cd "$dir"
        cargo run
        ;;
    "clj" | "cljc")
        CLJ_NS=`grep '^(ns ' "$FILE_PATH" | cut -d' ' -f2 | cut -d')' -f1 | head -1`
        if [ "$CLJ_NS" == "" ]; then
            echo "Unable to determine namespace of $FILE_PATH"
            exit 1
        fi
        if [[ "$CLJ_NS" =~ -test$ ]]; then
            run clj -A:test -n "$CLJ_NS"
        else
            run clj -m "$CLJ_NS"
        fi
        ;;
    "md")
        grip -b $FILE_PATH
        ;;
    *)
        if [ -x $FILE_PATH ]; then
            run $FILE_PATH $*
        else
            echo "Don't know how to run $FILE_PATH"
        fi
esac
