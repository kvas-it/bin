#!/bin/bash

if [ x$1 == x ]; then
    echo "usage: vimrun FILE"
    exit 1
fi

if [[ $1 =~ /* ]]; then
    FILE_PATH=$1 # Absolute path
else
    FILE_PATH=`pwd`/$1 # Relative path
fi

FILE_NAME=`basename $FILE_PATH`
FILE_EXT=${FILE_NAME##*.}

run() {
    echo \$ $*
    $*
}

case "$FILE_EXT" in
    "py")
        if [[ $FILE_NAME =~ test_* ]]; then
            if [[ -d .tox ]]; then  # We have some tox environments.
                if [[ -d .tox/py37 ]]; then    # Prefer 3.7
                    TOXENV=.tox/py37
                elif [[ -d .tox/py36 ]]; then    # Prefer 3.6
                    TOXENV=.tox/py36
                elif [[ -d .tox/py35 ]]; then    # then 3.5
                    TOXENV=.tox/py35
                elif [[ -d .tox/py27 ]]; then  # then 2.7
                    TOXENV=.tox/py27
                else                           # then whatever...
                    TOXENV="$(ls -d .tox/py* | head -1)"
                fi

                PIP="$TOXENV/bin/pip"
                PYTHON="$TOXENV/bin/python"

                if [ -f setup.py ]; then
                    name=$("$PYTHON" setup.py --name)
                    echo "$PIP" show "$name"
                    if "$PIP" freeze | grep "$name" | grep -q -v ==; then
                        echo "$name already installed in dev mode"
                    else
                        echo "Installing $name in dev mode"
                        "$PIP" uninstall -y "$name"
                        "$PYTHON" setup.py -q develop
                    fi
                else
                    export PYTHONPATH="$(pwd -P)"
                    echo "Activated $env and set PYTHONPATH to $PYTHONPATH"
                fi

                PYTEST="$TOXENV/bin/pytest"
            else
                PYTEST=pytest
            fi

            . "$TOXENV/bin/activate"
            run $PYTEST $FILE_PATH
        else
            run python $FILE_PATH
        fi
        ;;
    "hs")
        run runhaskell $FILE_PATH
        ;;
    "rs")
        dir=$(dirname "$FILE_PATH")
        while [ ! -f "$dir/Cargo.toml" ]; do
            dir=$(dirname "$dir")
            if [ "$dir" == / ]; then
                echo "Can't find Cargo.toml"
                exit 1
            fi
        done
        cd "$dir"
        cargo run
        ;;
    "clj" | "cljc")
        CLJ_NS=`grep '^(ns ' "$FILE_PATH" | cut -d' ' -f2 | cut -d')' -f1 | head -1`
        if [ "$CLJ_NS" == "" ]; then
            echo "Unable to determine namespace of $FILE_PATH"
            exit 1
        fi
        if [[ "$CLJ_NS" =~ -test$ ]]; then
            run clj -A:test -n "$CLJ_NS"
        else
            run clj -m "$CLJ_NS"
        fi
        ;;
    "md")
        grip -b $FILE_PATH
        ;;
    *)
        if [ -x $FILE_PATH ]; then
            run $FILE_PATH
        else
            echo "Don't know how to run $FILE_PATH"
        fi
esac
